name: Build and Publish
on:
  push:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.3'
      - name: Install dependencies
        run: pip install pyinstaller
      - name: Extract Version
        id: version
        run: |
          VERSION=$(grep '__version__' __version__.py | cut -d '"' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Build
        run: |
          rm -rf build dist

          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller --onefile --windowed --icon=assets/cost_estimate_icon_213134.ico --name EstimateGenerator src/main.py
            # Verify Windows build
            if [ ! -f "dist/EstimateGenerator.exe" ]; then
              echo "Windows build failed - no executable created"
              exit 1
            fi
          else
            pyinstaller --windowed --name EstimateGenerator --icon assets/cost_estimate_icon_213134.icns --osx-bundle-identifier com.yourdomain.EstimateGenerator src/main.py
            if [ ! -d "dist/EstimateGenerator.app" ]; then
              echo "macOS build failed - no app bundle created"
              exit 1
            fi
          fi
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}_Build
          path: dist/
      - name: Download Windows Artifact
        if: github.ref == 'refs/heads/main' && matrix.os == 'windows-latest'
        uses: actions/download-artifact@v4
        with:
          name: windows_Build

      - name: Download macOS Artifact
        if: github.ref == 'refs/heads/main' && matrix.os == 'macos-latest'
        uses: actions/download-artifact@v4
        with:
          name: macOS_Build
      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release v${{ steps.version.outputs.version }}"
          files: |
            dist/*.exe
            dist/*.dmg
          body: "Release v${{ steps.version.outputs.version }}"
