name: Build Cross-Platform Release

on:
  push:
    branches: [main]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build Windows executable
      run: >
        pyinstaller --onefile --windowed --name "Estimate-Generator_Win.exe"
        --hidden-import=app --paths=src
        --collect-all docx
        --icon=assets/cost_estimate_icon_213134.ico src/main.py

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: Estimate-Generator_Win
        path: dist/Estimate-Generator_Win.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build macOS executable
      run: >
        pyinstaller --windowed --name "Estimate-Generator_MacOS"
        --hidden-import=app --paths=src
        --collect-all docx
        --icon=assets/cost_estimate_icon_213134.icns src/main.py

    - name: Make executable
      run: chmod +x dist/Estimate-Generator_MacOS

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: Estimate-Generator_MacOS
        path: dist/Estimate-Generator_MacOS.app

  create-release:
    needs: [ build-windows, build-macos ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Read version from file
        id: get_version
        run: |
          VERSION=$(python -c "from src import __version__; print(__version__.__version__)")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git tag ${{ steps.get_version.outputs.VERSION }}
          git push origin ${{ steps.get_version.outputs.VERSION }}

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: Estimate-Generator_Win

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: Estimate-Generator_MacOS

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          files: |
            Estimate-Generator_Win.exe
            Estimate-Generator_MacOS
          body: |
            Version ${{ steps.get_version.outputs.VERSION }}